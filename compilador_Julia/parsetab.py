
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDENTIFIERIFFORWHILEleftFUNCTIONBEGINrightMODULErightASSIGNrightSUMASIGNMINASIGNMULTASIGNDIVASIGNMODULEASIGNEXPONENTASIGNleftLESS_THANLESS_THAN_OR_EQUALGREATER_THANGREATER_THAN_OR_EQUALEQUALSNOT_EQUALSleftPLUSMINUSORORSYMleftMULTIPLYDIVIDEANDANDSYMPERCENTrightSQUAREROOTrightEXPONENTrightLEFT_PARENRIGHT_PARENLEFT_BRACKETRIGHT_BRACKETADMIRATION AND ANDSYM ARROW AS ASSIGN BEGIN BOOLEAN BREAK CATCH COMMA COMMENT CONTINUE DIVASIGN DIVIDE DO DOT DOUBLEDOT DOUBLEPERCENT ELSE ELSEIF END EQUALS EXPONENT EXPONENTASIGN FOR FUNCTION FUNCTIONS_JULIA GREATER_THAN GREATER_THAN_OR_EQUAL IDENTIFIER IF IMPORT IN INCLUDE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_THAN LESS_THAN_OR_EQUAL MACRO MINASIGN MINUS MODULE MODULEASIGN MULTASIGN MULTIPLY MUT NEWLINE NOT NOT_EQUALS NUMBER OR ORSYM PERCENT PLUS PRINTLN REQUIRE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON SQUAREROOT STRING STRUCT SUMASIGN SYMBOL TRY USING WHILE\n            program : block\n            block : statement_list\n                    | empty\n            statement_list : statement\n                           | statement statement_list\n                           | statement_list statement\n            \n            statement : identifierDecl\n                      | array_estatement_julia\n                      | if_statement\n                      | elseif_block\n                      | else_statement\n                      | while_statement\n                      | for_statement\n                      | array_estatement\n                      | function_definition\n                      | statement_function\n                      | statement_call_function\n                      | statement_function_julia\n                      | statement_do\n                      | statement_try\n                      | statement_module\n                      | statement_begin\n                      | statement_using\n            \n            identifierDecl : IDENTIFIER assignment_number expression_number\n            \n            identifierDecl : IDENTIFIER assignment expression_number\n            \n            identifierDecl : IDENTIFIER assignment expression_string\n            \n            identifierDecl : IDENTIFIER assignment expression_boolean\n            \n            identifierDecl : IDENTIFIER assignment FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER RIGHT_PAREN\n            \n            identifierDecl : IDENTIFIER assignment FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN\n            \n            identifierDecl : FUNCTIONS_JULIA relation IDENTIFIER ASSIGN statement_function_julia\n            \n            identifierDecl : FUNCTIONS_JULIA relation IDENTIFIER ASSIGN LEFT_BRACKET array_elements RIGHT_BRACKET array_estatement_julia\n            \n            identifierDecl : FUNCTIONS_JULIA relation FUNCTIONS_JULIA LEFT_PAREN LEFT_BRACKET array_elements RIGHT_BRACKET COMMA FUNCTIONS_JULIA ASSIGN NUMBER RIGHT_PAREN array_estatement_julia\n            \n            identifierDecl : identifierList assignment_number expression_number_list\n                            | identifierList assignment expression_number_list\n            expression_number_list : expression_number\n                                    | expression_number_list COMMA expression_numberexpression_string_list : expression_string\n                                    | expression_string_list COMMA expression_stringexpression_boolean_list : expression_boolean\n                                        | expression_boolean_list COMMA expression_boolean\n            identifierDecl : identifierList assignment_number expression_string_list\n            \n            identifierDecl : identifierList assignment expression_boolean_list\n            identifierList : IDENTIFIER\n                              | identifierList COMMA IDENTIFIER\n            array_estatement : IDENTIFIER ASSIGN LEFT_BRACKET array_values RIGHT_BRACKET\n            \n            array_values : array_values COMMA NUMBER\n                         | NUMBER\n            \n            array_estatement_julia : expression_number FUNCTIONS_JULIA LEFT_BRACE IDENTIFIER COMMA NUMBER RIGHT_BRACE DOUBLEDOT array_content_julia\n                                   | values MINUS FUNCTIONS_JULIA FUNCTIONS_JULIA LEFT_BRACE IDENTIFIER COMMA NUMBER RIGHT_BRACE DOUBLEDOT array_content_julia\n            \n            array_content_julia : values\n                                | values NEWLINE\n            \n            values : NUMBER\n            \n             function_definition : FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list END\n            \n            statement_function : FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list END\n            \n            statement_function : FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list RETURN expression END\n            \n            statement_function : IDENTIFIER ASSIGN LEFT_PAREN argument_list RIGHT_PAREN ARROW expression\n            \n            statement_function_julia : FUNCTIONS_JULIA LEFT_PAREN argument_list RIGHT_PAREN\n                                     | FUNCTIONS_JULIA LEFT_PAREN NUMBER RIGHT_PAREN\n                                     | FUNCTIONS_JULIA LEFT_PAREN NUMBER DOT NUMBER RIGHT_PAREN\n                                     | FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER RIGHT_PAREN\n\n            \n            argument_list : expression\n                         | expression COMMA argument_list\n                         | statement_do\n                         | empty\n            \n            if_statement : IF expression_boolean statement_list END\n                         | IF expression_boolean statement_list ELSE statement_list END\n                         | IF expression_boolean statement_list elseif_block statement_list ELSE statement_list END\n                         | IF expression_boolean statement_list elseif_block END\n            \n            elseif_block : ELSEIF expression_boolean statement_list END\n                         | ELSEIF expression_boolean statement_list ELSE statement_list END\n                         | ELSEIF expression_boolean statement_list elseif_block END\n            \n            else_statement : ELSE statement_list END\n                           | empty\n            \n            assignment : IDENTIFIER ASSIGN expression\n            \n            while_statement : WHILE expression_boolean statement_list END\n                            | WHILE IDENTIFIER relation NUMBER statement_list END\n            \n            for_statement : FOR IDENTIFIER IN expression DOUBLEDOT expression_number statement_list END\n                          | FOR IDENTIFIER IN expression_number DOUBLEDOT expression_number statement_list END\n                          | FOR IDENTIFIER LEFT_BRACKET array_elements RIGHT_BRACKET statement_list END\n            \n            identifierDecl : IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET\n            \n            identifierDecl : identifierDecl COMMA IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET\n                           | identifierDecl NEWLINE IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET\n            \n            array_elements : expression_number\n                         | expression_string\n                         | expression_boolean\n                         | empty\n            \n            array_elements : array_elements COMMA expression_number\n                           | expression_number SEMICOLON expression_number\n                           | array_elements COMMA expression_string\n                           | array_elements COMMA expression_boolean\n            \n            empty :\n            \n            statement_call_function : IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN\n            \n            statement_do : DO statement_list END\n            \n            statement_begin : BEGIN statement_list END\n            \n            statement_try : TRY statement_list CATCH IDENTIFIER statement_list END\n            \n            statement_module : MODULE IDENTIFIER statement_list END\n            \n            statement_using : USING IDENTIFIER\n                            | USING IDENTIFIER AS IDENTIFIER\n            parameters : IDENTIFIER\n            expression : expression_number\n                       | expression_string\n                       | expression_boolean\n            \n            expression_boolean : LEFT_PAREN expression_boolean RIGHT_PAREN\n            \n            expression_boolean : IDENTIFIER\n                               | BOOLEAN\n                               | IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN\n            expression_boolean : expression_boolean relation expression_boolean\n                                    | ADMIRATION expression_boolean\n                                    | expression_string relation expression_string\n                                    | expression_number relation expression_number\n            assignment : ASSIGN\n            \n            assignment_number : SUMASIGN\n            \n            assignment_number : MINASIGN\n            \n            assignment_number : MULTASIGN\n            \n            assignment_number : DIVASIGN\n            \n            assignment_number : MODULEASIGN\n            \n            assignment_number : EXPONENTASIGN\n            expression_number : IDENTIFIER\n            expression_number : NUMBER\n                              | expression_number operator_arithmetic expression_number\n                              | expression_number DOUBLEDOT expression_number\n                              | expression_number DOT expression_number\n                              | MINUS expression_number\n                              | IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN\n            \n            expression_number : LEFT_PAREN expression_number RIGHT_PAREN\n                              | LEFT_BRACKET expression_number RIGHT_BRACKET\n            \n            expression_string : STRING\n            \n            expression_string : LEFT_PAREN expression_string RIGHT_PAREN\n            \n            expression_string : expression_string MULTIPLY expression_number\n                              | expression_string MULTIPLY expression_string\n            \n            operator_arithmetic : PLUS\n            \n            operator_arithmetic : MINUS\n            \n            operator_arithmetic : MULTIPLY\n            \n            operator_arithmetic : DIVIDE\n            \n            operator_arithmetic : PERCENT\n            \n            operator_arithmetic : SQUAREROOT\n            \n            operator_arithmetic : EXPONENT\n            \n            relation : LESS_THAN\n            \n            relation : LESS_THAN_OR_EQUAL\n            \n            relation : GREATER_THAN\n            \n            relation : GREATER_THAN_OR_EQUAL\n            \n            relation : EQUALS\n            \n            relation : NOT_EQUALS\n            \n            relation : AND\n                     | ANDSYM\n            \n            relation : OR\n                     | ORSYM\n            '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,43,44,45,83,84,91,94,95,99,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,161,165,172,175,189,197,198,200,207,210,211,212,214,216,217,218,219,222,230,231,236,240,246,249,250,251,252,256,257,259,268,269,280,282,284,285,290,291,292,294,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[-91,0,-1,-2,-3,-4,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-6,-73,-5,-118,-119,-123,-104,-105,-127,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,-108,-72,-93,-94,-92,-57,-58,-60,-65,-107,-103,-128,-109,-130,-129,-110,-69,-75,-96,-98,-80,-45,-30,-124,-36,-38,-40,-68,-106,-71,-106,-28,-59,-66,-70,-76,-95,-81,-82,-56,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,89,91,92,93,94,95,96,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,126,127,128,130,131,132,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,179,180,181,189,190,197,198,200,202,205,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,232,233,236,237,238,240,244,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,268,269,270,276,280,282,283,284,285,286,287,288,289,290,291,292,294,297,299,300,301,302,303,304,305,306,309,311,312,313,315,316,317,320,321,325,326,327,],[23,23,-73,23,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,48,83,83,48,83,94,23,94,103,104,105,23,23,108,23,110,-6,-73,23,111,112,83,115,115,-111,-112,-113,-114,-115,-116,-117,83,83,83,-131,-132,-133,-134,-135,-136,-137,136,139,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,83,115,153,-111,-123,23,94,-104,-105,94,-127,23,23,23,-104,23,23,23,23,-97,48,48,115,-24,-104,-25,-26,-27,115,115,-100,-101,-102,115,194,-121,-120,-122,-125,115,-126,-33,-41,-35,-37,83,-34,-42,-35,-39,115,-44,23,94,115,-108,83,83,-72,23,23,115,115,115,-93,229,23,-94,231,-74,115,235,-92,115,-57,-58,-60,83,94,-65,23,23,-107,-103,-128,-109,-130,-129,-110,-69,23,-10,-75,23,23,-96,-98,115,115,-80,115,83,-45,115,-30,115,-124,-36,-38,-40,281,23,23,-68,-106,23,-71,23,83,83,23,23,23,-106,-28,293,115,-59,-66,23,-70,-76,23,23,23,23,-95,-81,-82,-56,83,23,23,-132,23,-79,-53,115,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,83,-32,]),'FUNCTIONS_JULIA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,33,38,39,41,43,44,45,50,52,70,72,73,74,75,76,77,78,79,80,81,83,84,90,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,154,155,161,165,166,167,172,174,175,179,189,196,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,308,309,311,312,313,315,316,317,320,321,325,327,],[25,25,-73,25,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-118,59,-119,25,25,25,25,-6,-73,25,119,-111,135,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,154,-123,25,-104,-105,-127,25,25,25,-104,25,25,25,25,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,206,25,-108,-72,25,25,-93,25,-94,-74,-92,245,-57,-58,-60,-65,25,25,-107,-103,-128,-109,-130,-129,-110,-69,25,-10,-75,25,25,-96,-98,-80,-45,-30,-124,-36,-38,-40,25,25,-68,-106,25,-71,25,25,25,25,-106,-28,-59,-66,25,-70,-76,25,25,25,25,-95,-81,-82,-56,25,25,25,-79,-53,-29,318,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[32,32,-73,32,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,32,32,32,32,-6,-73,32,-118,-119,-123,32,-104,-105,-127,32,32,32,-104,32,32,32,32,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,32,-108,-72,32,32,-93,32,-94,-92,-57,-58,-60,-65,32,32,-107,-103,-128,-109,-130,-129,-110,-69,32,-10,-75,32,32,-96,-98,-80,-45,-30,-124,-36,-38,-40,32,32,-68,-106,32,-71,32,32,32,32,-106,-28,-59,-66,32,-70,-76,32,32,32,32,-95,-81,-82,-56,32,32,32,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'ELSEIF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[34,34,-73,34,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,34,34,34,34,-6,-73,34,-118,-119,-123,34,-104,-105,-127,34,34,34,-104,34,34,34,34,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,34,-108,-72,34,34,-93,34,-94,-92,-57,-58,-60,-65,34,34,-107,-103,-128,-109,-130,-129,-110,-69,34,-10,-75,34,34,-96,-98,-80,-45,-30,-124,-36,-38,-40,34,34,-68,-106,34,-71,34,34,34,34,-106,-28,-59,-66,34,-70,-76,34,34,34,34,-95,-81,-82,-56,34,34,34,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'ELSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[33,33,-73,33,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,33,33,33,33,-6,-73,33,-118,-119,-123,33,-104,-105,-127,33,33,33,-104,33,33,33,33,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,208,-108,-72,220,33,-93,33,-94,-92,-57,-58,-60,-65,33,33,-107,-103,-128,-109,-130,-129,-110,-69,33,-10,-75,33,33,-96,-98,-80,-45,-30,-124,-36,-38,-40,33,283,-68,-106,33,-71,33,33,33,33,-106,-28,-59,-66,33,-70,-76,33,33,33,33,-95,-81,-82,-56,33,33,33,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[35,35,-73,35,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,35,35,35,35,-6,-73,35,-118,-119,-123,35,-104,-105,-127,35,35,35,-104,35,35,35,35,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,35,-108,-72,35,35,-93,35,-94,-92,-57,-58,-60,-65,35,35,-107,-103,-128,-109,-130,-129,-110,-69,35,-10,-75,35,35,-96,-98,-80,-45,-30,-124,-36,-38,-40,35,35,-68,-106,35,-71,35,35,35,35,-106,-28,-59,-66,35,-70,-76,35,35,35,35,-95,-81,-82,-56,35,35,35,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[36,36,-73,36,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,36,36,36,36,-6,-73,36,-118,-119,-123,36,-104,-105,-127,36,36,36,-104,36,36,36,36,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,36,-108,-72,36,36,-93,36,-94,-92,-57,-58,-60,-65,36,36,-107,-103,-128,-109,-130,-129,-110,-69,36,-10,-75,36,36,-96,-98,-80,-45,-30,-124,-36,-38,-40,36,36,-68,-106,36,-71,36,36,36,36,-106,-28,-59,-66,36,-70,-76,36,36,36,36,-95,-81,-82,-56,36,36,36,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[37,37,-73,37,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,37,37,37,37,-6,-73,37,-118,-119,-123,37,-104,-105,-127,37,37,37,-104,37,37,37,37,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,37,-108,-72,37,37,-93,37,-94,-92,-57,-58,-60,-65,37,37,-107,-103,-128,-109,-130,-129,-110,-69,37,-10,-75,37,37,-96,-98,-80,-45,-30,-124,-36,-38,-40,37,37,-68,-106,37,-71,37,37,37,37,-106,-28,-59,-66,37,-70,-76,37,37,37,37,-95,-81,-82,-56,37,37,37,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'DO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,51,71,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,130,132,133,134,140,141,142,143,144,145,146,148,149,150,151,155,160,161,165,166,167,171,172,174,175,180,189,190,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[38,38,-73,38,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,38,38,38,38,-6,-73,38,38,38,-118,-119,-123,38,-104,-105,-127,38,38,38,-104,38,38,38,38,-97,-24,-104,-25,-26,-27,-100,-101,-102,38,-121,-120,-122,-125,38,-126,-33,-41,-35,-37,-34,-42,-35,-39,38,38,-108,-72,38,38,38,-93,38,-94,38,-92,38,-57,-58,-60,-65,38,38,-107,-103,-128,-109,-130,-129,-110,-69,38,-10,-75,38,38,-96,-98,-80,-45,-30,-124,-36,-38,-40,38,38,-68,-106,38,-71,38,38,38,38,-106,-28,-59,-66,38,-70,-76,38,38,38,38,-95,-81,-82,-56,38,38,38,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'TRY':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[39,39,-73,39,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,39,39,39,39,-6,-73,39,-118,-119,-123,39,-104,-105,-127,39,39,39,-104,39,39,39,39,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,39,-108,-72,39,39,-93,39,-94,-92,-57,-58,-60,-65,39,39,-107,-103,-128,-109,-130,-129,-110,-69,39,-10,-75,39,39,-96,-98,-80,-45,-30,-124,-36,-38,-40,39,39,-68,-106,39,-71,39,39,39,39,-106,-28,-59,-66,39,-70,-76,39,39,39,39,-95,-81,-82,-56,39,39,39,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'MODULE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[40,40,-73,40,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,40,40,40,40,-6,-73,40,-118,-119,-123,40,-104,-105,-127,40,40,40,-104,40,40,40,40,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,40,-108,-72,40,40,-93,40,-94,-92,-57,-58,-60,-65,40,40,-107,-103,-128,-109,-130,-129,-110,-69,40,-10,-75,40,40,-96,-98,-80,-45,-30,-124,-36,-38,-40,40,40,-68,-106,40,-71,40,40,40,40,-106,-28,-59,-66,40,-70,-76,40,40,40,40,-95,-81,-82,-56,40,40,40,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'BEGIN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[41,41,-73,41,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,41,41,41,41,-6,-73,41,-118,-119,-123,41,-104,-105,-127,41,41,41,-104,41,41,41,41,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,41,-108,-72,41,41,-93,41,-94,-92,-57,-58,-60,-65,41,41,-107,-103,-128,-109,-130,-129,-110,-69,41,-10,-75,41,41,-96,-98,-80,-45,-30,-124,-36,-38,-40,41,41,-68,-106,41,-71,41,41,41,41,-106,-28,-59,-66,41,-70,-76,41,41,41,41,-95,-81,-82,-56,41,41,41,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'USING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,39,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,107,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,255,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[42,42,-73,42,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,42,42,42,42,-6,-73,42,-118,-119,-123,42,-104,-105,-127,42,42,42,-104,42,42,42,42,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,42,-108,-72,42,42,-93,42,-94,-92,-57,-58,-60,-65,42,42,-107,-103,-128,-109,-130,-129,-110,-69,42,-10,-75,42,42,-96,-98,-80,-45,-30,-124,-36,-38,-40,42,42,-68,-106,42,-71,42,42,42,42,-106,-28,-59,-66,42,-70,-76,42,42,42,42,-95,-81,-82,-56,42,42,42,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,31,32,33,34,35,38,39,41,43,44,45,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,89,91,92,93,94,95,96,99,100,101,102,103,106,107,108,109,110,113,114,115,116,117,118,120,121,126,127,128,129,130,132,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,160,161,163,164,165,166,167,168,169,170,171,172,174,175,179,180,189,190,197,198,199,200,202,205,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,232,233,236,237,238,240,241,243,244,246,247,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,268,269,276,280,282,283,284,285,286,287,288,289,290,291,292,294,297,298,299,300,301,302,303,304,305,306,307,309,311,312,313,315,316,317,320,321,322,323,325,326,327,],[28,28,-73,28,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,84,84,84,84,28,84,84,28,28,28,-6,-73,28,84,84,84,-111,-112,-113,-114,-115,-116,-117,84,84,84,-131,-132,-133,-134,-135,-136,-137,138,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,84,84,-111,-123,28,84,-104,-105,84,-127,28,28,28,-104,28,28,28,28,-97,84,-24,-104,-25,-26,-27,84,84,-100,-101,-102,192,84,-121,-120,-122,-125,84,-126,-33,-41,-35,-37,84,-34,-42,-35,-39,84,28,84,84,-108,84,84,-72,28,28,223,84,84,84,-93,28,-94,-74,84,-92,84,-57,-58,248,-60,84,84,-65,28,28,-107,-103,-128,-109,-130,-129,-110,-69,28,-10,-75,28,28,-96,-98,84,84,-80,84,84,-45,275,277,84,-30,84,-124,-36,-38,-40,28,28,-68,-106,28,-71,28,84,84,28,28,28,-106,-28,84,-59,-66,28,-70,-76,28,28,28,28,-95,-81,-82,-56,28,310,28,28,-132,28,-79,-53,84,-29,315,-31,-67,-77,-78,-52,-48,-50,-55,-51,324,315,-49,28,-32,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,38,39,41,43,44,45,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,91,92,93,94,95,96,98,99,100,101,102,103,106,107,108,109,110,113,114,115,116,117,118,120,121,126,127,128,130,132,133,134,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,159,160,161,163,164,165,166,167,169,170,171,172,174,175,179,180,182,185,189,190,197,198,200,202,205,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,225,227,229,230,231,232,233,236,237,238,240,244,246,247,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,268,269,271,274,276,280,282,283,284,285,286,287,288,289,290,291,292,294,297,299,300,301,302,303,304,305,306,309,311,312,313,315,316,317,320,321,325,326,327,],[31,31,-73,31,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-118,64,31,31,-52,90,31,31,31,31,31,31,31,31,-6,-73,31,31,31,31,-111,-112,-113,-114,-115,-116,-117,31,31,31,-131,-132,-133,-134,-135,-136,-137,31,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,64,-118,-119,64,31,31,-111,-123,31,31,-104,-105,31,64,-127,31,31,31,-104,31,31,31,31,-97,31,64,-104,64,-26,-27,31,31,64,-101,-102,31,64,64,64,-119,-118,-125,31,-126,-33,-41,64,-37,31,-34,-42,64,-39,31,31,31,64,31,-108,31,31,-72,31,31,31,31,31,-93,31,-94,-74,31,64,64,-92,31,-57,-58,-60,31,31,-65,31,31,-107,-103,-128,-109,-130,-129,64,-69,31,-10,-75,31,64,64,31,-96,-98,31,31,-80,31,31,-45,31,-30,31,-124,64,-38,-40,31,31,-68,-106,31,-71,31,31,31,31,31,31,-106,-28,64,64,31,-59,-66,31,-70,-76,301,301,31,31,-95,-81,-82,-56,31,31,31,-132,31,-79,-53,31,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,31,-32,]),'LEFT_PAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,31,32,33,34,35,38,39,41,43,44,45,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,89,91,92,93,94,95,96,99,100,101,102,103,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,126,127,128,130,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,160,161,162,163,164,165,166,167,169,170,171,172,174,175,179,180,189,190,197,198,200,202,203,205,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,229,230,231,232,233,236,237,238,240,244,245,246,247,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,268,269,276,280,282,283,284,285,286,287,288,289,290,291,292,294,297,299,300,301,302,303,304,305,306,309,311,312,313,315,316,317,320,321,325,326,327,],[26,26,-73,26,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,51,71,26,26,26,93,26,93,93,26,26,26,-6,-73,26,26,120,120,130,-112,-113,-114,-115,-116,-117,26,26,26,-131,-132,-133,-134,-135,-136,-137,120,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,141,-119,147,152,-111,-123,26,93,160,-105,93,-127,26,26,26,160,171,26,26,26,26,-97,120,-24,180,-25,-26,-27,181,120,120,-100,-101,-102,120,-121,-120,-122,195,180,-125,120,-126,-33,-41,-35,-37,147,-34,-42,-35,-39,152,26,93,120,-108,215,147,26,-72,26,26,120,120,120,-93,26,-94,-74,120,-92,120,-57,-58,-60,26,215,93,-65,26,26,-107,-103,-128,-109,215,-130,-129,-110,-69,26,-10,-75,26,26,-96,-98,120,120,-80,120,26,-45,120,71,-30,120,-124,-36,-38,-40,26,26,-68,-106,26,-71,26,26,26,26,26,26,-106,-28,120,-59,-66,26,-70,-76,26,26,26,26,-95,-81,-82,-56,26,26,26,26,26,-79,-53,120,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,26,-32,]),'LEFT_BRACKET':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,31,32,33,34,35,38,39,41,43,44,45,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,89,91,92,93,94,95,96,99,100,101,102,103,104,106,107,108,109,110,113,114,115,116,117,118,120,121,126,127,128,130,132,133,134,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,160,161,163,164,165,166,167,169,170,171,172,174,175,177,178,179,180,189,190,195,196,197,198,200,202,205,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,232,233,236,237,238,240,244,246,247,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,268,269,276,280,282,283,284,285,286,287,288,289,290,291,292,294,297,299,300,301,302,303,304,305,306,309,311,312,313,315,316,317,320,321,325,326,327,],[27,27,-73,27,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,27,27,27,27,27,27,27,27,27,27,-6,-73,27,27,121,27,129,-112,-113,-114,-115,-116,-117,27,27,27,-131,-132,-133,-134,-135,-136,-137,27,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,27,27,-111,-123,27,27,-104,-105,27,-127,27,27,27,-104,170,27,27,27,27,-97,27,-24,-104,-25,-26,-27,27,27,-100,-101,-102,27,-121,-120,-122,-125,27,-126,-33,-41,-35,-37,27,-34,-42,-35,-39,27,27,27,27,-108,27,27,-72,27,27,27,27,27,-93,27,-94,232,233,-74,27,-92,27,244,247,-57,-58,-60,27,27,-65,27,27,-107,-103,-128,-109,-130,-129,-110,-69,27,-10,-75,27,27,-96,-98,27,27,-80,27,27,-45,27,-30,27,-124,-36,-38,-40,27,27,-68,-106,27,-71,27,27,27,27,27,27,-106,-28,27,-59,-66,27,-70,-76,27,27,27,27,-95,-81,-82,-56,27,27,27,27,27,-79,-53,27,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,27,-32,]),'END':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,33,38,41,43,44,45,83,84,91,92,94,95,99,100,101,102,103,106,108,109,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,155,161,165,166,167,172,174,175,189,197,198,200,207,208,209,210,211,212,214,216,217,218,219,220,221,222,223,229,230,231,236,240,246,249,250,251,252,254,256,257,258,259,260,263,264,265,268,269,280,282,283,284,285,286,287,288,289,290,291,292,294,299,300,302,303,304,306,309,311,312,313,314,315,316,317,320,321,325,327,],[-4,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-91,-91,-91,-6,-73,-5,-118,-119,-123,-91,-104,-105,-127,165,-91,-91,-104,172,-91,175,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,207,-108,-72,219,222,-93,230,-94,-92,-57,-58,-60,-65,-91,256,-107,-103,-128,-109,-130,-129,-110,-69,-91,259,-75,-91,-91,-96,-98,-80,-45,-30,-124,-36,-38,-40,282,-68,-106,284,-71,285,-91,-91,290,-106,-28,-59,-66,-91,-70,-76,-91,-91,303,304,-95,-81,-82,-56,311,312,313,-79,-53,-29,-31,-67,-77,-78,320,-52,-48,-50,-55,-51,-49,-32,]),'CATCH':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,39,43,44,45,83,84,91,94,95,99,107,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,161,165,172,175,189,197,198,200,207,210,211,212,214,216,217,218,219,222,230,231,236,240,246,249,250,251,252,256,257,259,268,269,280,282,284,285,290,291,292,294,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[-4,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-91,-6,-73,-5,-118,-119,-123,-104,-105,-127,173,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,-108,-72,-93,-94,-92,-57,-58,-60,-65,-107,-103,-128,-109,-130,-129,-110,-69,-75,-96,-98,-80,-45,-30,-124,-36,-38,-40,-68,-106,-71,-106,-28,-59,-66,-70,-76,-95,-81,-82,-56,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'RETURN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,43,44,45,83,84,91,94,95,99,110,114,115,116,117,118,126,127,128,132,133,134,140,142,143,144,145,146,148,149,150,151,161,165,172,175,189,197,198,200,207,210,211,212,214,216,217,218,219,222,230,231,236,240,246,249,250,251,252,256,257,259,264,268,269,280,282,284,285,289,290,291,292,294,303,304,306,309,311,312,313,315,316,317,320,321,325,327,],[-4,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-6,-73,-5,-118,-119,-123,-104,-105,-127,-97,-24,-104,-25,-26,-27,-100,-101,-102,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,-108,-72,-93,-94,-92,-57,-58,-60,-65,-107,-103,-128,-109,-130,-129,-110,-69,-75,-96,-98,-80,-45,-30,-124,-36,-38,-40,-68,-106,-71,-91,-106,-28,-59,-66,-70,-76,305,-95,-81,-82,-56,-79,-53,-29,-31,-67,-77,-78,-52,-48,-50,-55,-51,-49,-32,]),'COMMA':([6,23,29,83,84,91,94,95,99,114,115,116,117,118,121,123,126,127,128,132,133,134,138,139,140,142,143,144,145,146,148,149,150,151,153,161,170,184,185,186,187,188,191,192,194,197,198,200,210,211,212,214,216,217,218,226,227,232,233,235,236,244,246,247,249,250,251,252,257,266,267,268,269,271,272,273,274,275,278,279,280,281,291,292,296,306,309,315,316,317,321,325,327,],[46,-43,88,-118,-119,-123,-104,-105,-127,-24,-104,-25,-26,-27,-91,190,-100,-101,-102,-121,-120,-122,-119,-104,-125,-126,202,203,-35,-37,202,205,-35,-39,-44,-108,-91,237,-83,-84,-85,-86,241,-47,243,-57,-58,-60,-107,-103,-128,-109,-130,-129,-110,237,-83,-91,-91,270,-80,-91,-30,-91,-124,-36,-38,-40,-106,237,237,-106,-28,-87,-89,-90,-88,-46,237,237,-59,298,-81,-82,308,-29,-31,-52,-48,-50,-51,-49,-32,]),'NEWLINE':([6,83,84,91,94,95,99,114,115,116,117,118,132,133,134,140,142,143,144,145,146,148,149,150,151,161,197,198,200,210,211,212,214,216,217,218,236,246,249,250,251,252,257,268,269,280,291,292,306,309,315,316,317,321,325,327,],[47,-118,-119,-123,-104,-105,-127,-24,-104,-25,-26,-27,-121,-120,-122,-125,-126,-33,-41,-35,-37,-34,-42,-35,-39,-108,-57,-58,-60,-107,-103,-128,-109,-130,-129,-110,-80,-30,-124,-36,-38,-40,-106,-106,-28,-59,-81,-82,-29,-31,-52,-48,321,-51,-49,-32,]),'ASSIGN':([23,29,48,111,112,136,153,318,],[52,89,113,89,89,196,-44,322,]),'SUMASIGN':([23,29,153,],[53,53,-44,]),'MINASIGN':([23,29,153,],[54,54,-44,]),'MULTASIGN':([23,29,153,],[55,55,-44,]),'DIVASIGN':([23,29,153,],[56,56,-44,]),'MODULEASIGN':([23,29,153,],[57,57,-44,]),'EXPONENTASIGN':([23,29,153,],[58,58,-44,]),'DOUBLEDOT':([23,24,28,82,83,84,85,91,94,95,98,99,103,114,115,116,126,127,128,132,133,134,138,139,140,142,145,150,159,161,182,185,189,210,211,212,214,216,217,218,224,225,227,249,250,257,268,271,274,286,287,295,319,],[-118,60,-119,60,-118,-119,60,-123,-104,-105,60,-127,-118,60,-104,60,60,-101,-102,60,60,60,-119,-118,-125,-126,60,60,60,-108,60,60,-124,-107,-103,-128,-109,-130,-129,60,261,262,60,-124,60,-106,-106,60,60,60,60,307,323,]),'DOT':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,62,-119,62,-118,-119,62,-123,-118,62,-118,62,-118,62,62,62,62,62,199,-118,-125,-126,62,62,62,62,62,-124,62,62,62,62,-124,62,-124,-124,62,62,62,62,]),'PLUS':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,63,-119,63,-118,-119,63,-123,-118,63,-118,63,-118,63,63,63,63,63,-119,-118,-125,-126,63,63,63,63,63,-124,63,63,63,63,-124,63,-124,-124,63,63,63,63,]),'MULTIPLY':([23,24,28,82,83,84,85,91,94,97,98,99,103,114,115,116,117,126,127,132,133,134,138,139,140,142,145,146,150,158,159,182,183,185,186,189,204,212,214,216,217,218,225,227,249,250,251,257,268,271,272,274,286,287,],[-118,65,-119,65,-118,-119,65,65,-118,163,65,-127,-118,65,-118,65,163,65,163,65,65,65,-119,-118,-125,-126,65,163,65,163,65,65,163,65,163,-124,163,-128,163,-130,-129,65,65,65,-124,65,163,-124,-124,65,163,65,65,65,]),'DIVIDE':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,66,-119,66,-118,-119,66,66,-118,66,-118,66,-118,66,66,66,66,66,-119,-118,-125,-126,66,66,66,66,66,-124,66,66,66,66,-124,66,-124,-124,66,66,66,66,]),'PERCENT':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,67,-119,67,-118,-119,67,67,-118,67,-118,67,-118,67,67,67,67,67,-119,-118,-125,-126,67,67,67,67,67,-124,67,67,67,67,-124,67,-124,-124,67,67,67,67,]),'SQUAREROOT':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,68,-119,68,-118,-119,68,68,-118,68,-118,68,-118,68,68,68,68,68,-119,-118,-125,-126,68,68,68,68,68,-124,68,68,68,68,-124,68,-124,-124,68,68,68,68,]),'EXPONENT':([23,24,28,82,83,84,85,91,94,98,103,114,115,116,126,132,133,134,138,139,140,142,145,150,159,182,185,189,217,218,225,227,249,250,257,268,271,274,286,287,],[-118,69,-119,69,-118,-119,69,69,-118,69,-118,69,-118,69,69,69,69,69,-119,-118,-125,-126,69,69,69,69,69,-124,69,69,69,69,-124,69,-124,-124,69,69,69,69,]),'LESS_THAN':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[72,-118,-119,-123,72,-104,-105,72,72,-127,72,72,72,-104,72,72,72,72,72,72,-121,-120,-122,-119,-104,-125,-126,72,72,72,72,72,72,72,72,72,72,72,72,-103,-128,-109,-130,-129,-110,72,72,-124,72,-106,-106,72,72,72,-121,]),'LESS_THAN_OR_EQUAL':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[73,-118,-119,-123,73,-104,-105,73,73,-127,73,73,73,-104,73,73,73,73,73,73,-121,-120,-122,-119,-104,-125,-126,73,73,73,73,73,73,73,73,73,73,73,73,-103,-128,-109,-130,-129,-110,73,73,-124,73,-106,-106,73,73,73,-121,]),'GREATER_THAN':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[74,-118,-119,-123,74,-104,-105,74,74,-127,74,74,74,-104,74,74,74,74,74,74,-121,-120,-122,-119,-104,-125,-126,74,74,74,74,74,74,74,74,74,74,74,74,-103,-128,-109,-130,-129,-110,74,74,-124,74,-106,-106,74,74,74,-121,]),'GREATER_THAN_OR_EQUAL':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[75,-118,-119,-123,75,-104,-105,75,75,-127,75,75,75,-104,75,75,75,75,75,75,-121,-120,-122,-119,-104,-125,-126,75,75,75,75,75,75,75,75,75,75,75,75,-103,-128,-109,-130,-129,-110,75,75,-124,75,-106,-106,75,75,75,-121,]),'EQUALS':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[76,-118,-119,-123,76,-104,-105,76,76,-127,76,76,76,-104,76,76,76,76,76,76,-121,-120,-122,-119,-104,-125,-126,76,76,76,76,76,76,76,76,76,76,76,76,-103,-128,-109,-130,-129,-110,76,76,-124,76,-106,-106,76,76,76,-121,]),'NOT_EQUALS':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[77,-118,-119,-123,77,-104,-105,77,77,-127,77,77,77,-104,77,77,77,77,77,77,-121,-120,-122,-119,-104,-125,-126,77,77,77,77,77,77,77,77,77,77,77,77,-103,-128,-109,-130,-129,-110,77,77,-124,77,-106,-106,77,77,77,-121,]),'AND':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[78,-118,-119,-123,78,-104,-105,78,78,-127,78,78,78,-104,78,78,78,78,78,78,-121,-120,-122,-119,-104,-125,-126,78,78,78,78,78,78,78,78,78,78,78,78,-103,-128,-109,-130,-129,-110,78,78,-124,78,-106,-106,78,78,78,-121,]),'ANDSYM':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[79,-118,-119,-123,79,-104,-105,79,79,-127,79,79,79,-104,79,79,79,79,79,79,-121,-120,-122,-119,-104,-125,-126,79,79,79,79,79,79,79,79,79,79,79,79,-103,-128,-109,-130,-129,-110,79,79,-124,79,-106,-106,79,79,79,-121,]),'OR':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[80,-118,-119,-123,80,-104,-105,80,80,-127,80,80,80,-104,80,80,80,80,80,80,-121,-120,-122,-119,-104,-125,-126,80,80,80,80,80,80,80,80,80,80,80,80,-103,-128,-109,-130,-129,-110,80,80,-124,80,-106,-106,80,80,80,-121,]),'ORSYM':([25,83,84,91,92,94,95,97,98,99,101,102,103,115,116,117,118,126,127,128,132,133,134,138,139,140,142,150,151,157,158,159,161,182,183,185,186,187,210,211,212,214,216,217,218,225,227,249,252,257,268,271,272,273,287,],[81,-118,-119,-123,81,-104,-105,81,81,-127,81,81,81,-104,81,81,81,81,81,81,-121,-120,-122,-119,-104,-125,-126,81,81,81,81,81,81,81,81,81,81,81,81,-103,-128,-109,-130,-129,-110,81,81,-124,81,-106,-106,81,81,81,-121,]),'BOOLEAN':([32,34,35,50,51,52,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,91,93,94,95,96,99,113,115,120,121,126,127,128,130,132,133,134,140,141,142,152,156,160,161,169,170,171,179,180,190,205,210,211,212,214,216,217,218,232,233,237,244,247,249,257,268,276,305,],[95,95,95,95,95,-111,95,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,95,-111,-123,95,-104,-105,95,-127,95,-104,95,95,-100,-101,-102,95,-121,-120,-122,-125,95,-126,95,95,95,-108,95,95,95,-74,95,95,95,-107,-103,-128,-109,-130,-129,-110,95,95,95,95,95,-124,-106,-106,95,95,]),'ADMIRATION':([32,34,35,50,51,52,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,91,93,94,95,96,99,113,115,120,121,126,127,128,130,132,133,134,140,141,142,152,156,160,161,169,170,171,179,180,190,205,210,211,212,214,216,217,218,232,233,237,244,247,249,257,268,276,305,],[96,96,96,96,96,-111,96,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,96,-111,-123,96,-104,-105,96,-127,96,-104,96,96,-100,-101,-102,96,-121,-120,-122,-125,96,-126,96,96,96,-108,96,96,96,-74,96,96,96,-107,-103,-128,-109,-130,-129,-110,96,96,96,96,96,-124,-106,-106,96,96,]),'STRING':([32,34,35,50,51,52,53,54,55,56,57,58,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,89,91,93,94,95,96,99,113,115,120,121,126,127,128,130,132,133,134,140,141,142,147,152,156,160,161,162,163,169,170,171,179,180,190,203,205,210,211,212,214,215,216,217,218,232,233,237,244,247,249,257,268,276,305,],[99,99,99,99,99,-111,-112,-113,-114,-115,-116,-117,99,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-118,-119,99,99,-111,-123,99,-104,-105,99,-127,99,-104,99,99,-100,-101,-102,99,-121,-120,-122,-125,99,-126,99,99,99,99,-108,99,99,99,99,99,-74,99,99,99,99,-107,-103,-128,-109,99,-130,-129,-110,99,99,99,99,99,-124,-106,-106,99,99,]),'RIGHT_PAREN':([51,71,82,83,84,91,94,95,99,115,122,123,124,125,126,127,128,130,132,133,134,137,138,139,140,141,142,157,158,159,160,161,171,172,180,182,183,190,193,201,204,210,211,212,213,214,216,217,218,228,234,235,239,248,249,257,268,293,324,],[-91,-91,140,-118,-119,-123,-104,-105,-127,-104,189,-61,-63,-64,-100,-101,-102,-91,-121,-120,-122,197,198,200,-125,-91,-126,211,212,140,-91,-108,-91,-93,-91,140,212,-91,242,249,212,-107,-103,-128,257,-109,-130,-129,-110,264,268,269,-62,280,-124,-106,-106,306,326,]),'LEFT_BRACE':([59,206,],[131,253,]),'RIGHT_BRACKET':([83,84,85,91,94,95,99,115,121,132,133,134,140,142,161,170,184,185,186,187,188,191,192,210,211,212,214,216,217,218,226,227,232,233,244,247,249,257,266,267,268,271,272,273,274,275,278,279,],[-118,-119,142,-123,-104,-105,-127,-104,-91,-121,-120,-122,-125,-126,-108,-91,236,142,-84,-85,-86,240,-47,-107,-103,-128,-109,-130,-129,-110,263,-83,-91,-91,-91,-91,-124,-106,291,292,-106,-87,-89,-90,-88,-46,296,297,]),'SEMICOLON':([83,84,91,115,132,133,134,140,142,185,227,249,268,],[-118,-119,-123,-118,-121,-120,-122,-125,-126,238,238,-124,-124,]),'IN':([104,],[169,]),'AS':([110,],[176,]),'ARROW':([242,],[276,]),'RIGHT_BRACE':([277,310,],[295,319,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,],[2,]),'statement_list':([0,5,33,38,39,41,92,101,102,108,208,209,220,223,229,263,264,283,286,287,],[3,45,100,106,107,109,155,166,167,174,254,255,258,260,265,288,289,299,300,302,]),'empty':([0,3,5,33,38,39,41,45,51,71,92,100,101,102,106,107,108,109,121,130,141,155,160,166,167,170,171,174,180,190,208,209,220,223,229,232,233,244,247,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[4,44,44,44,44,44,44,44,125,125,44,44,44,44,44,44,44,44,188,125,125,44,125,44,44,188,125,44,125,125,44,44,44,44,44,188,188,188,188,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'statement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[5,43,5,5,5,5,5,43,5,43,5,5,43,43,5,43,43,43,43,43,5,5,5,5,5,43,43,43,43,5,5,43,5,5,5,43,43,43,43,43,]),'identifierDecl':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'array_estatement_julia':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,297,299,300,302,326,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,309,7,7,7,327,]),'if_statement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'elseif_block':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,209,221,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'else_statement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_statement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'for_statement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array_estatement':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_definition':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'statement_function':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'statement_call_function':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'statement_function_julia':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,196,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,246,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'statement_do':([0,3,5,33,38,39,41,45,51,71,92,100,101,102,106,107,108,109,130,141,155,160,166,167,171,174,180,190,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[18,18,18,18,18,18,18,18,124,124,18,18,18,18,18,18,18,18,124,124,18,124,18,18,124,18,124,124,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'statement_try':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'statement_module':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'statement_begin':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'statement_using':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'expression_number':([0,3,5,26,27,31,32,33,34,35,38,39,41,45,49,50,51,60,61,62,71,86,87,92,93,96,100,101,102,106,107,108,109,113,120,121,130,141,147,152,155,156,160,163,164,166,167,169,170,171,174,180,190,202,205,208,209,220,223,229,232,233,237,238,244,247,254,255,258,260,261,262,263,264,265,276,283,286,287,288,289,297,299,300,301,302,305,326,],[24,24,24,82,85,91,98,24,98,98,24,24,24,24,114,116,126,132,133,134,126,145,150,24,159,98,24,24,24,24,24,24,24,126,182,185,126,126,82,182,24,98,126,217,218,24,24,225,227,126,24,126,126,250,98,24,24,24,24,24,227,227,271,274,227,227,24,24,24,24,286,287,24,24,24,126,24,24,24,24,24,24,24,24,91,24,126,24,]),'identifierList':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,299,300,302,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'values':([0,3,5,33,38,39,41,45,92,100,101,102,106,107,108,109,155,166,167,174,208,209,220,223,229,254,255,258,260,263,264,265,283,286,287,288,289,297,299,300,302,307,323,326,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,317,317,30,]),'assignment_number':([23,29,],[49,86,]),'assignment':([23,29,111,112,],[50,87,177,178,]),'operator_arithmetic':([24,82,85,91,98,114,116,126,132,133,134,145,150,159,182,185,217,218,225,227,250,271,274,286,287,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'relation':([25,92,97,98,101,102,103,116,117,118,126,127,128,150,151,157,158,159,161,182,183,185,186,187,210,225,227,252,271,272,273,],[70,156,162,164,156,156,168,164,162,156,164,162,156,164,156,156,162,164,156,164,162,164,162,156,156,164,164,156,164,162,156,]),'expression_boolean':([32,34,35,50,51,71,87,93,96,113,120,121,130,141,152,156,160,169,170,171,180,190,205,232,233,237,244,247,276,305,],[92,101,102,118,128,128,151,157,161,128,157,187,128,128,157,210,128,128,187,128,128,128,252,187,187,273,187,187,128,128,]),'expression_string':([32,34,35,50,51,71,86,87,93,96,113,120,121,130,141,147,152,156,160,162,163,169,170,171,180,190,203,205,215,232,233,237,244,247,276,305,],[97,97,97,117,127,127,146,97,158,97,127,183,186,127,127,204,158,97,127,214,216,127,186,127,127,127,251,97,204,186,186,272,186,186,127,127,]),'argument_list':([51,71,130,141,160,171,180,190,],[122,137,193,201,213,228,234,239,]),'expression':([51,71,113,130,141,160,169,171,180,190,276,305,],[123,123,179,123,123,123,224,123,123,123,294,314,]),'expression_number_list':([86,87,],[143,148,]),'expression_string_list':([86,],[144,]),'expression_boolean_list':([87,],[149,]),'array_elements':([121,170,232,233,244,247,],[184,226,266,267,278,279,]),'array_values':([129,],[191,]),'array_content_julia':([307,323,],[316,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','compilador_Julia.py',254),
  ('block -> statement_list','block',1,'p_block','compilador_Julia.py',259),
  ('block -> empty','block',1,'p_block','compilador_Julia.py',260),
  ('statement_list -> statement','statement_list',1,'p_statement_list','compilador_Julia.py',265),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','compilador_Julia.py',266),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','compilador_Julia.py',267),
  ('statement -> identifierDecl','statement',1,'p_statement','compilador_Julia.py',272),
  ('statement -> array_estatement_julia','statement',1,'p_statement','compilador_Julia.py',273),
  ('statement -> if_statement','statement',1,'p_statement','compilador_Julia.py',274),
  ('statement -> elseif_block','statement',1,'p_statement','compilador_Julia.py',275),
  ('statement -> else_statement','statement',1,'p_statement','compilador_Julia.py',276),
  ('statement -> while_statement','statement',1,'p_statement','compilador_Julia.py',277),
  ('statement -> for_statement','statement',1,'p_statement','compilador_Julia.py',278),
  ('statement -> array_estatement','statement',1,'p_statement','compilador_Julia.py',279),
  ('statement -> function_definition','statement',1,'p_statement','compilador_Julia.py',280),
  ('statement -> statement_function','statement',1,'p_statement','compilador_Julia.py',281),
  ('statement -> statement_call_function','statement',1,'p_statement','compilador_Julia.py',282),
  ('statement -> statement_function_julia','statement',1,'p_statement','compilador_Julia.py',283),
  ('statement -> statement_do','statement',1,'p_statement','compilador_Julia.py',284),
  ('statement -> statement_try','statement',1,'p_statement','compilador_Julia.py',285),
  ('statement -> statement_module','statement',1,'p_statement','compilador_Julia.py',286),
  ('statement -> statement_begin','statement',1,'p_statement','compilador_Julia.py',287),
  ('statement -> statement_using','statement',1,'p_statement','compilador_Julia.py',288),
  ('identifierDecl -> IDENTIFIER assignment_number expression_number','identifierDecl',3,'p_identifier_decl1','compilador_Julia.py',294),
  ('identifierDecl -> IDENTIFIER assignment expression_number','identifierDecl',3,'p_identifier_decl6','compilador_Julia.py',303),
  ('identifierDecl -> IDENTIFIER assignment expression_string','identifierDecl',3,'p_identifier_decl2','compilador_Julia.py',312),
  ('identifierDecl -> IDENTIFIER assignment expression_boolean','identifierDecl',3,'p_identifier_decl3','compilador_Julia.py',321),
  ('identifierDecl -> IDENTIFIER assignment FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER RIGHT_PAREN','identifierDecl',6,'p_identifier_decl4','compilador_Julia.py',330),
  ('identifierDecl -> IDENTIFIER assignment FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER COMMA IDENTIFIER RIGHT_PAREN','identifierDecl',8,'p_identifier_decl5','compilador_Julia.py',336),
  ('identifierDecl -> FUNCTIONS_JULIA relation IDENTIFIER ASSIGN statement_function_julia','identifierDecl',5,'p_idicator_julia','compilador_Julia.py',342),
  ('identifierDecl -> FUNCTIONS_JULIA relation IDENTIFIER ASSIGN LEFT_BRACKET array_elements RIGHT_BRACKET array_estatement_julia','identifierDecl',8,'p_idicator_julia2','compilador_Julia.py',348),
  ('identifierDecl -> FUNCTIONS_JULIA relation FUNCTIONS_JULIA LEFT_PAREN LEFT_BRACKET array_elements RIGHT_BRACKET COMMA FUNCTIONS_JULIA ASSIGN NUMBER RIGHT_PAREN array_estatement_julia','identifierDecl',13,'p_idicator_julia3','compilador_Julia.py',354),
  ('identifierDecl -> identifierList assignment_number expression_number_list','identifierDecl',3,'p_identifier_assignmentList1','compilador_Julia.py',360),
  ('identifierDecl -> identifierList assignment expression_number_list','identifierDecl',3,'p_identifier_assignmentList1','compilador_Julia.py',361),
  ('expression_number_list -> expression_number','expression_number_list',1,'p_list_expression_number','compilador_Julia.py',366),
  ('expression_number_list -> expression_number_list COMMA expression_number','expression_number_list',3,'p_list_expression_number','compilador_Julia.py',367),
  ('expression_string_list -> expression_string','expression_string_list',1,'p_list_expression_string','compilador_Julia.py',371),
  ('expression_string_list -> expression_string_list COMMA expression_string','expression_string_list',3,'p_list_expression_string','compilador_Julia.py',372),
  ('expression_boolean_list -> expression_boolean','expression_boolean_list',1,'p_list_expression_boolean_list','compilador_Julia.py',376),
  ('expression_boolean_list -> expression_boolean_list COMMA expression_boolean','expression_boolean_list',3,'p_list_expression_boolean_list','compilador_Julia.py',377),
  ('identifierDecl -> identifierList assignment_number expression_string_list','identifierDecl',3,'p_identifier_assignmentList2','compilador_Julia.py',382),
  ('identifierDecl -> identifierList assignment expression_boolean_list','identifierDecl',3,'p_identifier_assignmentList3','compilador_Julia.py',388),
  ('identifierList -> IDENTIFIER','identifierList',1,'p_list_identifier','compilador_Julia.py',393),
  ('identifierList -> identifierList COMMA IDENTIFIER','identifierList',3,'p_list_identifier','compilador_Julia.py',394),
  ('array_estatement -> IDENTIFIER ASSIGN LEFT_BRACKET array_values RIGHT_BRACKET','array_estatement',5,'p_array_estatement','compilador_Julia.py',399),
  ('array_values -> array_values COMMA NUMBER','array_values',3,'p_array_values','compilador_Julia.py',404),
  ('array_values -> NUMBER','array_values',1,'p_array_values','compilador_Julia.py',405),
  ('array_estatement_julia -> expression_number FUNCTIONS_JULIA LEFT_BRACE IDENTIFIER COMMA NUMBER RIGHT_BRACE DOUBLEDOT array_content_julia','array_estatement_julia',9,'p_array_estructure_julia','compilador_Julia.py',411),
  ('array_estatement_julia -> values MINUS FUNCTIONS_JULIA FUNCTIONS_JULIA LEFT_BRACE IDENTIFIER COMMA NUMBER RIGHT_BRACE DOUBLEDOT array_content_julia','array_estatement_julia',11,'p_array_estructure_julia','compilador_Julia.py',412),
  ('array_content_julia -> values','array_content_julia',1,'p_array_content_julia','compilador_Julia.py',418),
  ('array_content_julia -> values NEWLINE','array_content_julia',2,'p_array_content_julia','compilador_Julia.py',419),
  ('values -> NUMBER','values',1,'p_values','compilador_Julia.py',424),
  ('function_definition -> FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list END','function_definition',7,'p_function_definition','compilador_Julia.py',429),
  ('statement_function -> FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list END','statement_function',7,'p_statement_function1','compilador_Julia.py',434),
  ('statement_function -> FUNCTION IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN statement_list RETURN expression END','statement_function',9,'p_statement_function2','compilador_Julia.py',445),
  ('statement_function -> IDENTIFIER ASSIGN LEFT_PAREN argument_list RIGHT_PAREN ARROW expression','statement_function',7,'p_statement_function3','compilador_Julia.py',456),
  ('statement_function_julia -> FUNCTIONS_JULIA LEFT_PAREN argument_list RIGHT_PAREN','statement_function_julia',4,'p_statement_function_julia','compilador_Julia.py',475),
  ('statement_function_julia -> FUNCTIONS_JULIA LEFT_PAREN NUMBER RIGHT_PAREN','statement_function_julia',4,'p_statement_function_julia','compilador_Julia.py',476),
  ('statement_function_julia -> FUNCTIONS_JULIA LEFT_PAREN NUMBER DOT NUMBER RIGHT_PAREN','statement_function_julia',6,'p_statement_function_julia','compilador_Julia.py',477),
  ('statement_function_julia -> FUNCTIONS_JULIA LEFT_PAREN IDENTIFIER RIGHT_PAREN','statement_function_julia',4,'p_statement_function_julia','compilador_Julia.py',478),
  ('argument_list -> expression','argument_list',1,'p_argument_list','compilador_Julia.py',485),
  ('argument_list -> expression COMMA argument_list','argument_list',3,'p_argument_list','compilador_Julia.py',486),
  ('argument_list -> statement_do','argument_list',1,'p_argument_list','compilador_Julia.py',487),
  ('argument_list -> empty','argument_list',1,'p_argument_list','compilador_Julia.py',488),
  ('if_statement -> IF expression_boolean statement_list END','if_statement',4,'p_if_statement','compilador_Julia.py',493),
  ('if_statement -> IF expression_boolean statement_list ELSE statement_list END','if_statement',6,'p_if_statement','compilador_Julia.py',494),
  ('if_statement -> IF expression_boolean statement_list elseif_block statement_list ELSE statement_list END','if_statement',8,'p_if_statement','compilador_Julia.py',495),
  ('if_statement -> IF expression_boolean statement_list elseif_block END','if_statement',5,'p_if_statement','compilador_Julia.py',496),
  ('elseif_block -> ELSEIF expression_boolean statement_list END','elseif_block',4,'p_elseif_block','compilador_Julia.py',503),
  ('elseif_block -> ELSEIF expression_boolean statement_list ELSE statement_list END','elseif_block',6,'p_elseif_block','compilador_Julia.py',504),
  ('elseif_block -> ELSEIF expression_boolean statement_list elseif_block END','elseif_block',5,'p_elseif_block','compilador_Julia.py',505),
  ('else_statement -> ELSE statement_list END','else_statement',3,'p_else_statement','compilador_Julia.py',511),
  ('else_statement -> empty','else_statement',1,'p_else_statement','compilador_Julia.py',512),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','compilador_Julia.py',517),
  ('while_statement -> WHILE expression_boolean statement_list END','while_statement',4,'p_while_statement','compilador_Julia.py',522),
  ('while_statement -> WHILE IDENTIFIER relation NUMBER statement_list END','while_statement',6,'p_while_statement','compilador_Julia.py',523),
  ('for_statement -> FOR IDENTIFIER IN expression DOUBLEDOT expression_number statement_list END','for_statement',8,'p_for_statement','compilador_Julia.py',529),
  ('for_statement -> FOR IDENTIFIER IN expression_number DOUBLEDOT expression_number statement_list END','for_statement',8,'p_for_statement','compilador_Julia.py',530),
  ('for_statement -> FOR IDENTIFIER LEFT_BRACKET array_elements RIGHT_BRACKET statement_list END','for_statement',7,'p_for_statement','compilador_Julia.py',531),
  ('identifierDecl -> IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET','identifierDecl',5,'p_array_decl','compilador_Julia.py',537),
  ('identifierDecl -> identifierDecl COMMA IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET','identifierDecl',7,'p_array_declList','compilador_Julia.py',543),
  ('identifierDecl -> identifierDecl NEWLINE IDENTIFIER assignment LEFT_BRACKET array_elements RIGHT_BRACKET','identifierDecl',7,'p_array_declList','compilador_Julia.py',544),
  ('array_elements -> expression_number','array_elements',1,'p_array_elements_s','compilador_Julia.py',550),
  ('array_elements -> expression_string','array_elements',1,'p_array_elements_s','compilador_Julia.py',551),
  ('array_elements -> expression_boolean','array_elements',1,'p_array_elements_s','compilador_Julia.py',552),
  ('array_elements -> empty','array_elements',1,'p_array_elements_s','compilador_Julia.py',553),
  ('array_elements -> array_elements COMMA expression_number','array_elements',3,'p_array_elements_m','compilador_Julia.py',558),
  ('array_elements -> expression_number SEMICOLON expression_number','array_elements',3,'p_array_elements_m','compilador_Julia.py',559),
  ('array_elements -> array_elements COMMA expression_string','array_elements',3,'p_array_elements_m','compilador_Julia.py',560),
  ('array_elements -> array_elements COMMA expression_boolean','array_elements',3,'p_array_elements_m','compilador_Julia.py',561),
  ('empty -> <empty>','empty',0,'p_empty','compilador_Julia.py',566),
  ('statement_call_function -> IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN','statement_call_function',4,'p_statement_call_function','compilador_Julia.py',572),
  ('statement_do -> DO statement_list END','statement_do',3,'p_statement_do','compilador_Julia.py',578),
  ('statement_begin -> BEGIN statement_list END','statement_begin',3,'p_statement_begin','compilador_Julia.py',584),
  ('statement_try -> TRY statement_list CATCH IDENTIFIER statement_list END','statement_try',6,'p_statement_try','compilador_Julia.py',590),
  ('statement_module -> MODULE IDENTIFIER statement_list END','statement_module',4,'p_statement_module','compilador_Julia.py',596),
  ('statement_using -> USING IDENTIFIER','statement_using',2,'p_statement_using','compilador_Julia.py',602),
  ('statement_using -> USING IDENTIFIER AS IDENTIFIER','statement_using',4,'p_statement_using','compilador_Julia.py',603),
  ('parameters -> IDENTIFIER','parameters',1,'p_parameters_list','compilador_Julia.py',608),
  ('expression -> expression_number','expression',1,'p_expression','compilador_Julia.py',616),
  ('expression -> expression_string','expression',1,'p_expression','compilador_Julia.py',617),
  ('expression -> expression_boolean','expression',1,'p_expression','compilador_Julia.py',618),
  ('expression_boolean -> LEFT_PAREN expression_boolean RIGHT_PAREN','expression_boolean',3,'p_expression_parents3','compilador_Julia.py',623),
  ('expression_boolean -> IDENTIFIER','expression_boolean',1,'p_expression_boolean','compilador_Julia.py',629),
  ('expression_boolean -> BOOLEAN','expression_boolean',1,'p_expression_boolean','compilador_Julia.py',630),
  ('expression_boolean -> IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN','expression_boolean',4,'p_expression_boolean','compilador_Julia.py',631),
  ('expression_boolean -> expression_boolean relation expression_boolean','expression_boolean',3,'p_condition_boolean','compilador_Julia.py',636),
  ('expression_boolean -> ADMIRATION expression_boolean','expression_boolean',2,'p_condition_boolean','compilador_Julia.py',637),
  ('expression_boolean -> expression_string relation expression_string','expression_boolean',3,'p_condition_boolean','compilador_Julia.py',638),
  ('expression_boolean -> expression_number relation expression_number','expression_boolean',3,'p_condition_boolean','compilador_Julia.py',639),
  ('assignment -> ASSIGN','assignment',1,'p_assigment_identifier1','compilador_Julia.py',644),
  ('assignment_number -> SUMASIGN','assignment_number',1,'p_assignment_identifier2','compilador_Julia.py',650),
  ('assignment_number -> MINASIGN','assignment_number',1,'p_assignment_identifier3','compilador_Julia.py',656),
  ('assignment_number -> MULTASIGN','assignment_number',1,'p_assignment_identifier4','compilador_Julia.py',662),
  ('assignment_number -> DIVASIGN','assignment_number',1,'p_assignment_identifier5','compilador_Julia.py',668),
  ('assignment_number -> MODULEASIGN','assignment_number',1,'p_assignment_identifier6','compilador_Julia.py',674),
  ('assignment_number -> EXPONENTASIGN','assignment_number',1,'p_assignment_identifier7','compilador_Julia.py',680),
  ('expression_number -> IDENTIFIER','expression_number',1,'p_expression_number1','compilador_Julia.py',684),
  ('expression_number -> NUMBER','expression_number',1,'p_expression_number','compilador_Julia.py',692),
  ('expression_number -> expression_number operator_arithmetic expression_number','expression_number',3,'p_expression_number','compilador_Julia.py',693),
  ('expression_number -> expression_number DOUBLEDOT expression_number','expression_number',3,'p_expression_number','compilador_Julia.py',694),
  ('expression_number -> expression_number DOT expression_number','expression_number',3,'p_expression_number','compilador_Julia.py',695),
  ('expression_number -> MINUS expression_number','expression_number',2,'p_expression_number','compilador_Julia.py',696),
  ('expression_number -> IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN','expression_number',4,'p_expression_number','compilador_Julia.py',697),
  ('expression_number -> LEFT_PAREN expression_number RIGHT_PAREN','expression_number',3,'p_expression_parents1','compilador_Julia.py',703),
  ('expression_number -> LEFT_BRACKET expression_number RIGHT_BRACKET','expression_number',3,'p_expression_parents1','compilador_Julia.py',704),
  ('expression_string -> STRING','expression_string',1,'p_expression_string','compilador_Julia.py',710),
  ('expression_string -> LEFT_PAREN expression_string RIGHT_PAREN','expression_string',3,'p_expression_parents2','compilador_Julia.py',715),
  ('expression_string -> expression_string MULTIPLY expression_number','expression_string',3,'p_expression_mult2','compilador_Julia.py',721),
  ('expression_string -> expression_string MULTIPLY expression_string','expression_string',3,'p_expression_mult2','compilador_Julia.py',722),
  ('operator_arithmetic -> PLUS','operator_arithmetic',1,'p_expression_plus','compilador_Julia.py',728),
  ('operator_arithmetic -> MINUS','operator_arithmetic',1,'p_expression_minus','compilador_Julia.py',734),
  ('operator_arithmetic -> MULTIPLY','operator_arithmetic',1,'p_expression_mult1','compilador_Julia.py',740),
  ('operator_arithmetic -> DIVIDE','operator_arithmetic',1,'p_expression_div','compilador_Julia.py',746),
  ('operator_arithmetic -> PERCENT','operator_arithmetic',1,'p_expression_mod','compilador_Julia.py',752),
  ('operator_arithmetic -> SQUAREROOT','operator_arithmetic',1,'p_expression_squareRoot','compilador_Julia.py',758),
  ('operator_arithmetic -> EXPONENT','operator_arithmetic',1,'p_expression_exponent','compilador_Julia.py',764),
  ('relation -> LESS_THAN','relation',1,'p_relation_boolean1','compilador_Julia.py',770),
  ('relation -> LESS_THAN_OR_EQUAL','relation',1,'p_relation_boolean2','compilador_Julia.py',776),
  ('relation -> GREATER_THAN','relation',1,'p_relation_boolean3','compilador_Julia.py',782),
  ('relation -> GREATER_THAN_OR_EQUAL','relation',1,'p_relation_boolean4','compilador_Julia.py',788),
  ('relation -> EQUALS','relation',1,'p_relation_boolean5','compilador_Julia.py',794),
  ('relation -> NOT_EQUALS','relation',1,'p_relation_boolean6','compilador_Julia.py',800),
  ('relation -> AND','relation',1,'p_relation_boolean7','compilador_Julia.py',806),
  ('relation -> ANDSYM','relation',1,'p_relation_boolean7','compilador_Julia.py',807),
  ('relation -> OR','relation',1,'p_relation_boolean8','compilador_Julia.py',813),
  ('relation -> ORSYM','relation',1,'p_relation_boolean8','compilador_Julia.py',814),
]
